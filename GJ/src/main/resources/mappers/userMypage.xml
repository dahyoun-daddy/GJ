<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.gj.mappers.userMypage">

	<sql id="searchCv">
		<choose>
			<when test="1 == searchDiv">
				AND D.user_name LIKE '%'||#{searchWord}||'%'
			</when>
			<when test="2 == searchDiv">
				AND C.cv_grade LIKE '%'||#{searchWord}||'%'
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</sql>
	
	<sql id="searchApply">
		<choose>
			<when test="1 == searchDiv">
				AND C.apply_no LIKE '%'||#{searchWord}||'%'
			</when>
			<when test="2 == searchDiv">
				AND D.hire_title LIKE '%'||#{searchWord}||'%'
			</when>
			<when test="3 == searchDiv">
				AND E.user_name LIKE '%'||#{searchWord}||'%'
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</sql>
	
	<insert id="addPic" parameterType="PictureVO">
		INSERT INTO profile (
			    user_id,
			    p_fl_nm,
			    p_sv_nm,
			    p_fl_pt,
			    p_fl_tp,
			    p_fl_sz,
			    reg_id,
			    reg_dt
			) VALUES (
			    #{userId},
			    #{pFlNm},
			    #{pSvNm},
			    #{pFlPt},
			    #{pFlTp},
			    #{pFlSz},
			    #{regId},
			    sysdate
			)
	</insert>
	
	<delete id="deletePic" parameterType="PictureVO">
		DELETE FROM profile
		WHERE user_id = #{userId}
	</delete>
	
	<!-- Test 위한 쿼리문. 실제로는 사용하지 않음 -->
	<delete id="deleteCvAll">
		DELETE FROM usercv
	</delete>
	
	
	<!-- 기업 마이페이지 오픈된 이력서 리스트 -->
	<select id="retrieveCv" parameterType="SearchVO" resultType="CvFormVO">
		SELECT X.*, Y.*
		  FROM
		(
		    SELECT T.reg_id,
		           DECODE(TO_CHAR(T.cv_date,'MM/DD'),TO_CHAR(sysdate,'MM/DD')
    						,TO_CHAR(T.cv_date,'HH24:mm:SS'),TO_CHAR(T.cv_date,'YYYY/MM/DD')) AS cv_date,
                   T.cv_grade,
                   T.cv_check,
				   DECODE(TO_CHAR(T.reg_dt,'MM/DD'),TO_CHAR(sysdate,'MM/DD')
        					,TO_CHAR(T.reg_dt,'HH24:mm:SS'),TO_CHAR(T.reg_dt,'YYYY/MM/DD')) AS reg_dt
                   T.mod_id,
				   DECODE(TO_CHAR(T.mod_dt,'MM/DD'),TO_CHAR(sysdate,'MM/DD')
        					,TO_CHAR(T.mod_dt,'HH24:mm:SS'),TO_CHAR(T.mod_dt,'YYYY/MM/DD')) AS mod_dt
                   T.user_nick,
                   T.user_name,
		           T.rnum AS no
		      FROM
		    (
		        SELECT C.*,
		               D.user_nick as user_nick,
		               D.user_name as user_name,
		               ROW_NUMBER() OVER(ORDER BY C.reg_dt DESC) AS rnum
		          FROM usercv C, users D
		         WHERE C.reg_id = D.user_id
		           AND C.cv_check = 1
				  		<include refid="searchCv"/>
				    ) T
				    WHERE rnum BETWEEN (#{pageSize} * (#{pageNum}-1)+1)
					  AND (#{pageSize} * (#{pageNum}-1)+ #{pageSize})
			) X
			NATURAL JOIN
			(
			    SELECT COUNT(*) AS total_cnt
			      FROM usercv C, users D
			     WHERE C.reg_id = D.user_id
			       AND C.cv_check = 1
			        <include refid="searchCv"/>
			) Y;
	</select>

	<insert id="addCv" parameterType="CvFormVO">
		INSERT INTO USERCV(reg_id, cv_date, cv_grade, cv_check, reg_dt) VALUES (
		    #{regId},
            sysdate,
            #{cvGrade},
            #{cvCheck},
            sysdate
            )
	</insert>
	
	<update id="updateCv" parameterType="CvFormVO">
		UPDATE usercv
		SET
		    cv_date  = sysdate ,
		    cv_grade = #{cvGrade},
		    cv_check = #{cvCheck},
		    mod_id   = #{regId},
		    mod_dt   = sysdate
		WHERE
		    reg_id = #{regId} 
	</update>
	
	<select id="selectCv" parameterType="CvFormVO" resultType="CvFormVO">
		SELECT reg_id, cv_date, cv_grade, cv_check, reg_dt, mod_id, mod_dt
		FROM usercv
		WHERE reg_id = #{regId} 
	</select>
	
	<insert id="addLic" parameterType="LicenseVO">
		INSERT INTO userlicense (
		    lic_no,
		    lic_name,
		    lic_date,
		    lic_score,
		    reg_id
		) VALUES (
		    #{licNo},
		    #{licName},
		    #{licDate},
		    #{licScore},
		    #{regId}
		)
	</insert>
	
	<update id="updateLic" parameterType="LicenseVO">
		UPDATE userlicense
		SET
		    lic_name  = #{licName},
		    lic_date  = #{licDate},
		    lic_score = #{licScore}
		WHERE
		    lic_no = #{licNo}
	</update>
	
	<delete id="deleteLic" parameterType="LicenseVO">
		DELETE FROM userlicense
		WHERE lic_no = #{licNo}
	</delete>
	
	<select id="retrieveLic" parameterType="SearchVO" resultType="LicenseVO">
		SELECT X.*, Y.*
		  FROM
		(
		    SELECT T.LIC_NO,
		           T.LIC_NAME,
		           T.LIC_DATE,
		           T.LIC_SCORE,
		           T.REG_ID,
		           T.rnum AS no
		      FROM
		    (
		        SELECT C.*,
		               ROW_NUMBER() OVER(ORDER BY LIC_DATE DESC) AS rnum
		          FROM USERLICENSE C
		         WHERE C.reg_id = #{regId}
		    ) T
		) X
		NATURAL JOIN
		(
		    SELECT COUNT(*) AS total_cnt
		      FROM USERLICENSE
		) Y
	</select>
	
	<select id="selectLic" parameterType="SearchVO" resultType="LicenseVO">
		SELECT lic_no, lic_name, lic_date, lic_score, reg_id
		FROM userlicense
		WHERE reg_id = #{regId}
		  AND lic_no = #{licNo} 
	</select>
	
	<insert id="addApply" parameterType="ApplyVO">
		INSERT INTO hireapply (
		    apply_no,
		    user_id,
		    apply_date,
		    hire_no,
		    apply_check
		) VALUES (
		    #{applyNo},
		    #{userId},
		    #{applyDate},
		    #{hireNo},
		    '1'
		)
	</insert>
	
	<select id="retrieveApplyUser" parameterType="SearchVO" resultType="ApplyVO">
		SELECT X.*, Y.*
		  FROM
		(
		    SELECT T.apply_no,
                   T.user_id,
                   DECODE(TO_CHAR(T.apply_date,'MM/DD'),TO_CHAR(sysdate,'MM/DD')
    						,TO_CHAR(T.apply_date,'HH24:mm:SS'),TO_CHAR(T.apply_date,'YYYY/MM/DD')) AS apply_date,
                   T.hire_no,
                   T.apply_check,
                   T.hire_title,
                   T.comp_id,
                   T.comp_nick,
                   T.user_name,
                   T.rnum
		      FROM
		    (
		        SELECT C.*,
                       D.hire_title as hire_title,
                       D.user_id AS comp_id,
                      (SELECT U.user_nick 
                         FROM USERS U 
                        WHERE D.user_id = U.user_id) as comp_nick,
                       E.user_name as user_name,
		               ROW_NUMBER() OVER(ORDER BY APPLY_DATE DESC) AS rnum
		          FROM HIREAPPLY C, HIREINFO D, USERS E
                 WHERE C.hire_no = D.hire_no
                   AND C.user_id = E.user_id
    			   AND C.user_id = #{userId}
                   <include refid="searchApply"/>
		    ) T
		    WHERE rnum BETWEEN (#{pageSize} * (#{pageNum}-1)+1)
			  AND (#{pageSize} * (#{pageNum}-1)+ #{pageSize})
		   		  
		) X
		NATURAL JOIN
		(
		    SELECT COUNT(*) AS total_cnt
              FROM HIREAPPLY C, HIREINFO D, USERS E
             WHERE C.hire_no = D.hire_no
               AND C.user_id = E.user_id
			   AND C.user_id = #{userId}
		      <include refid="searchApply"/>
		) Y
	</select>
	
	<select id="retrieveApplyComp" parameterType="SearchVO" resultType="ApplyVO">
		SELECT X.*, Y.*
		  FROM
		(
		    SELECT T.apply_no,
                   T.user_id,
                   DECODE(TO_CHAR(T.apply_date,'MM/DD'),TO_CHAR(sysdate,'MM/DD')
    						,TO_CHAR(T.apply_date,'HH24:mm:SS'),TO_CHAR(T.apply_date,'YYYY/MM/DD')) AS apply_date,
                   T.hire_no,
                   T.apply_check,
                   T.hire_title,
                   T.comp_id,
                   T.comp_nick,
                   T.user_name,
                   T.rnum
		      FROM
		    (
		        SELECT C.*,
                       D.hire_title as hire_title,
                       D.user_id AS comp_id,
                      (SELECT U.user_nick 
                         FROM USERS U 
                        WHERE D.user_id = U.user_id) as comp_nick,
                       E.user_name as user_name,
		               ROW_NUMBER() OVER(ORDER BY APPLY_DATE DESC) AS rnum
		          FROM HIREAPPLY C, HIREINFO D, USERS E
                 WHERE C.hire_no = D.hire_no
                   AND C.user_id = E.user_id
                   AND C.apply_check = 1
                   <include refid="searchApply"/>
		    ) T
		    WHERE rnum BETWEEN (#{pageSize} * (#{pageNum}-1)+1)
			  AND (#{pageSize} * (#{pageNum}-1)+ #{pageSize})
		   		  
		) X
		NATURAL JOIN
		(
		    SELECT COUNT(*) AS total_cnt
              FROM HIREAPPLY C, HIREINFO D, USERS E
             WHERE C.hire_no = D.hire_no
               AND C.user_id = E.user_id
               AND C.apply_check = 1
		      <include refid="searchApply"/>
		) Y
	</select>
	
	
	<update id="updateApply" parameterType="ApplyVO"> 
		UPDATE hireapply
		SET
		    apply_check = 0
		WHERE
		    apply_no = #{applyNo}
	</update>
	
	<delete id="deleteApply" parameterType="ApplyVO">
		DELETE FROM hireapply
		WHERE apply_no = #{applyNo}
	</delete>
	
	
	<update id="updateUser" parameterType="UserVO"> 
		UPDATE users
		SET
		     user_passwd = #{userPasswd},
		     user_nick = #{userNick},
		     user_name = #{userName},
		     user_add = #{userAdd},
		     user_pass_qu = #{userPassQu},
		     user_pass_an = #{userPassAn},
		     user_phone = #{userPhone},
		     enter_salay = #{enterSalay},
		     enter_cnt = #{enterCnt},
		     enter_hiredate = TO_DATE(#{enterHiredate},'YYYY/MM/DD'),
		     mod_id = #{userId},
		     mod_dt = sysdate
		WHERE
		     user_id = #{userId} 
	</update>
	
	<delete id="deleteUser" parameterType="UserVO">
		DELETE FROM users
		 WHERE user_id     = #{userId}
		   AND user_passwd = #{userPasswd}
	</delete>
	
<!-- 	private String userId; //email -->
<!-- 	private String userNick; //nickname -->
<!-- 	private int cvCheck; //resume open chk -->
<!-- 	private int hireCount; //count the company's hireInfo -->
	
	<select id="selectUserInfo" parameterType="UserMPViewVO" resultType="UserMPViewVO">
		SELECT t1.user_id as user_id ,
			   t1.user_nick as user_nick ,
		       t2.cv_check as cv_check
		  FROM users t1, usercv t2
		 WHERE t1.user_id = t2.reg_id
		   AND t1.user_id = #{userId}
	</select>
	
	<select id="selectCompInfo" parameterType="UserMPViewVO" resultType="UserMPViewVO">
		SELECT t1.user_nick as user_nick,
		       count(t2.hire_no) as hire_count
		  FROM users t1, hireinfo t2
		 WHERE t1.user_id = t2.user_id
		   AND t1.user_id = #{userId}
		 GROUP BY t1.user_nick
	</select>
	
	

</mapper>
